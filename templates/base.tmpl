<!DOCTYPE html>
<html lang="en" prefix="og: http://ogp.me/ns#">
  <head>

    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-111495904-1"></script>
    <script>window.dataLayer=window.dataLayer||[];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'UA-111495904-1');</script>
    <meta charset="utf-8">

    {% block header %}
    {% endblock %}

    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="twitter:card" content="summary">
    <meta name="twitter:creator" content="@SrPablo">

    <link rel="icon"      href="/favicon.ico?v=2">
    <link rel="stylesheet" type="text/css" href="/css/morepablo-2019-10-09.css">
  </head>
  <body>
    <div class="content">
      {% block main %}
      {% endblock %}
    </div>
    <script async type="text/javascript">
      const goatStyles = 'color: #aaa; font-size: 14px;';
      const titleStyles = 'text-align: center; font-weight: bold; font-size: 25px; color: #222';
      const spacer = '                               ';
      const goatSpacer = '                                                          ';

      const printGoatLine = (line) => {
        console.log("%c" + goatSpacer + line, goatStyles);
      };

      console.log(`%c${spacer}Goat commends openers of the console`, titleStyles);

      printGoatLine('');
      printGoatLine('       / /');
      printGoatLine('    (\\/_//`)');
      printGoatLine("     /   '/");
      printGoatLine('    0  0   \\ ');
      printGoatLine('   /        \\ ');
      printGoatLine('  /    __/   \\ ');
      printGoatLine(' /,  _/ \     \\_');
      printGoatLine(' `-./ )  |     ~^~^~^~^~^~^~^~\\~.');
      printGoatLine('     (   /                     \\_}');
      printGoatLine('        |               /      |');
      printGoatLine('        ;     |         \\      /');
      printGoatLine('         \\/ ,/           \\    |');
      printGoatLine('         / /~~|~|~~~~~~|~|\\   |');
      printGoatLine('        / /   | |      | | `\\ \\ ');
      printGoatLine('       / /    | |      | |   \\ \\ ');
      printGoatLine('      / (     | |      | |    \\ \\ ');
      printGoatLine('     /,_)    /__)     /__)   /,_/');
      printGoatLine(String.raw`'''''"""""'''""""""'''""""""''"""""''''`);
      printGoatLine('');
      console.log(`%c${spacer}ASCII art credit: http://www.ascii-art.de/ascii/ghi/goat.txt`, 'text-align: right; color: #111; font-size: 16px');


    /**
     * Knockoff/joke off of "dark mode." Mark mode dots all the i's and j's in text nodes with a famous Mark:
     * Mark Zuckerburg, Marc Maron, Mark Cuban, Mark from The Room, Marc Andreesonâ€¦
     *
     * The technical implementation will happen in a few steps:
     *
     * - Find all the `i` text nodes and wrap them in a <span class="mark-i"><span class="mark-dot-x"></span>i</span>
     * - The (x) will be randomly generated within a range, each will have a different value for offset in a spritesheet.
     * - mark-dot-x will float on top, with a high z-index so it's "in front of" the lower i
     *
     * Since the rest is happening in CSS and the spritesheet, the main responsibility of this function is to edit the
     * DOM. It travels the whole damn thing. It's all messy but fun. I could externalize it, but eh.
     */
    function markMode() {

      function getRandomArbitrary(min, max) {
        return Math.floor(Math.random() * (max - min + 1)) + min;
      }

      function wrapInSpans(textNode) {
        let text = textNode.nodeValue;
        let identifier = getRandomArbitrary(0, 11);
        // TODO: do progressive replacements so we don't get the same head
        // multiple times on a string.
        let replacementText = text.replace(/[ij]/g, `<span class="mark-i"><span class="mark-dot-${identifier}"></span>i</span>`);
        let replacement = document.createElement('span');
        replacement.innerHTML = replacementText;
        textNode.replaceWith(replacement);
      }

      /**
       * DFS tree traversal, like we did back in college.
       */
      function markModeRecursive(element) {
        element.childNodes.forEach((child) => {
          if (child.nodeType == Node.TEXT_NODE) {
            wrapInSpans(child);
          } else {
            markModeRecursive(child);
          }
        });
      }

      markModeRecursive(document.querySelector('body'));
    }
    document.getElementById('markActivate').addEventListener('click', markMode);
    </script>
  </body>
</html>
